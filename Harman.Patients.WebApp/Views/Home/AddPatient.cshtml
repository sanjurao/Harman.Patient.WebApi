@model Harman.Demographics.Web.Models.PatientModel

@{
    ViewBag.Title = "AddPatient";
}

<h2>AddPatient</h2>



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>PatientModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Forenames, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Forenames, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Forenames, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Surname, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Surname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Surname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DOB, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.RadioButtonFor(model => model.Gender, 0) @Html.Label("Male")
                @Html.RadioButtonFor(model => model.Gender, 1)  @Html.Label("Female")
                @Html.RadioButtonFor(model => model.Gender, 2) @Html.Label("Other")
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-10 list-Contacts">
                @for (int i = 0; i < Model.Contacts.Count; i++)
                {
                    if (i == 0)
                    {
                        <div class="contacts-record-template">

                            @Html.LabelFor(model => model.Contacts[i].HomeNumber)
                            @Html.EditorFor(model => model.Contacts[i].HomeNumber)
                            @Html.ValidationMessageFor(model => model.Contacts[i].HomeNumber)

                            @Html.LabelFor(model => model.Contacts[i].MobileNumber)
                            @Html.EditorFor(model => model.Contacts[i].MobileNumber)
                            @Html.ValidationMessageFor(model => model.Contacts[i].MobileNumber)

                            @Html.LabelFor(model => model.Contacts[i].WorkNumber)
                            @Html.EditorFor(model => model.Contacts[i].WorkNumber)
                            @Html.ValidationMessageFor(model => model.Contacts[i].WorkNumber)


                        </div>
                    }
                    else
                    {
                        <div class="contacts-record">

                            @Html.LabelFor(model => model.Contacts[i].HomeNumber)
                            @Html.EditorFor(model => model.Contacts[i].HomeNumber)
                            @Html.ValidationMessageFor(model => model.Contacts[i].HomeNumber)

                            @Html.LabelFor(model => model.Contacts[i].MobileNumber)
                            @Html.EditorFor(model => model.Contacts[i].MobileNumber)
                            @Html.ValidationMessageFor(model => model.Contacts[i].MobileNumber)

                            @Html.LabelFor(model => model.Contacts[i].WorkNumber)
                            @Html.EditorFor(model => model.Contacts[i].WorkNumber)
                            @Html.ValidationMessageFor(model => model.Contacts[i].WorkNumber)


                        </div>
                    }



                }

            </div>
        </div>
        <a href="#" class="add-button">Add another</a>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>


<script type="text/javascript">
    $(document).ready(function () {

        $('.add-button').click(function () {

            var count = $(".contacts-record").length;
            var template = $('.contacts-record-template').clone();
            template.find('input[type=text]').val(null);

            $.each(template.find('input[type=text]'), function () {
               
                var name = $(this).attr('name');
                name = name.replace('0', count+1);
                $(this).attr('name', name);
               
            });
            template.append('<a href="#" onclick="$(this).parent().remove();">Delete</a>');
            $('.list-Contacts').append(template);
            template.removeClass('contacts-record-template').addClass('contacts-record').show();
        });
    });

</script>

<script src="~/Scripts/jquery.validate.min.js"></script>